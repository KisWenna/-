#设a[0:n-1]是已排好序的数组，
请改写二分搜索算法，使得当x不在数组中时，返回小于x的最大元素位置i和大于x的最小元素位置j。
当搜索元素在数组中时，i和j相同，均为x在数组中的位置。#

#输入有两行：
第一行是n值和x值； 第二行是n个不相同的整数组成的非降序序列，每个整数之间以空格分隔。#


#输出小于x的最大元素的最大下标i和大于x的最小元素的最小下标j。
当搜索元素在数组中时，i和j相同。
提示：若x小于全部数值，则输出：-1 0 若x大于全部数值，则输出：n-1的值 n的值#

#include<iostream>
using namespace std;

void search(int a[] , int left , int right ,int x, int N){
	int i , j , mid, k = 0;    //k为标志位，标志是否查找到 
	while(left < right && k == 0){
		mid = (left + right)/2 ;
		
		if(a[mid] == x) {
			   
			i = j = mid ;
			cout<<i<<" "<<j ;
			k = 1 ; 
		} 
		
		else{
			if(x < a[mid]) right = mid - 1 ;
			if(x > a[mid]) left = mid + 1 ;
			
		} 
	}
    if(left >= right) {
    	
		if(a[left] == x) cout << left <<" "<<left ;
		else  {
			  if(a[0] > x) {
			    i=-1,j=0;
			    cout<<i<<" "<<j ;
			  }
			  if(a[N-1] < x) cout << N-1 <<" " << N ;
			  for(int i = 0 ; i < N-1 ; i++){
			  	if(a[i] < x && x < a[i+1])
			  			cout<<i<<" "<<i+1 ;
			  } 
		}
}
   
	 
}
int main(){
	int n , a[1001] , x , sum;
	cin >> n ;
	cin >> x ;
	for(int i = 0 ;i < n; i++){
		cin >> a[i] ;
	}
	
	search(a , 0 ,n-1, x, n) ;    //返回下标 

}
